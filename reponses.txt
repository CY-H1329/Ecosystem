1.  STATISTIQUES D’EXECUTION D’UNE COMMANDE SHELL
1.1 Exécutez la commande shell time pour afficher les statistiques d’utilisation du processeur
pour la commande « sleep 5 ». Que constatez-vous ?
    - real	0m5,010s
      user	0m0,004s
      sys	0m0,001s
    - On constate que le temps utilise est le temps 'real' en effet la commande sleep
      n'utilise presque pas de CPU donc user et sys ont un temps qui ne reflete pas
      le 'vrai' temps passe

1.2   Ecrivez un programme loopcpu.c qui s’exécute une boucle vide effectuant 5x109 itérations.
Lancez le programme avec la commande time. Que constatez vous ?
    - On constate que la fonction ne s'arrete pas, ceci est sans doute du a notre machine.
    On obtient cependant les temps:
    real	0m46,184s
    user	0m46,180s
    sys	0m0,000s
    On peut donc constater que l'on utilise ici le temps CPU de l'user-mode.Cela nous indique que l'on ne
    va pas dans le kernel ici.

1.3   Ecrivez un programme loopsys.c qui s’exécute une boucle de 5x107 itérations. A chaque
itération, getpid(), un appel système, est appelé. Lancez le programme avec la commande
time. Que constatez vous ?
    - real	1m5,624s
      user	0m46,035s
      sys	0m19,588s
    - On remarque cette fois-ci que le temps CPU systeme est utilise,
      en effet, getpid - fonction qui utilise le mode kernel

3.1   - ./mytimes "sleep 5" "sleep 10"
lance_commande(171803879)  time spent: 5.00966883 sec
lance_commande(171803887)  time spent: 10.00469017 sec


5. Changement de priorite
5.1 Tapez la commande ps -l. Quelle est la priorité du processus ps ?
  - F S   UID   PID  PPID  C PRI  NI ADDR SZ WCHAN  TTY          TIME CMD
    0 S 28610100 10450 10310  0 80 0 -  1891 -      pts/0    00:00:00 bash
    0 R 28610100 12352 10450  0 90 10 - 2637 -      pts/0    00:00:00 ps
  - La priorite de ps vaut 90

5.2 Tapez  la commande nice -19 ps -l. Quelle est maintenant la  priorité de la  commande ps?
  - F S   UID   PID  PPID  C PRI  NI ADDR SZ WCHAN  TTY          TIME CMD
    0 S 28610100 10450 10310  0 80 0 -  1891 -      pts/0    00:00:00 bash
    0 R 28610100 12420 10450  0 99 19 - 2637 -      pts/0    00:00:00 ps
  - La priorite de ps vaut 90 + 9 = 99 (Au maximum, on peut baisser la priorité d'un processus de 19)
